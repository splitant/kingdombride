<?php

use Drupal\Core\Template\Attribute;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_theme().
 */
function kingdombride_common_theme() {
    return [
        'views_view_kingdombride_carousel' => [
            'base hook' => 'views_view_unformatted',
            'template' => 'views-view-kingdombride-carousel',
        ],
        'kingdombride_bef_checkboxes' => [
            'base hook' => 'bef_checkboxes',
            'template' => 'kingdombride-bef-checkboxes',
        ],
        'kingdombride_bef_radios' => [
            'base hook' => 'bef_radios',
            'template' => 'kingdombride-bef-radios',
        ],
    ];
}

/**
 * Prepares variables for custom bef checkboxes templates.
 *
 * Default template: kingdombride-bef-checkboxes.html.twig.
 *
 * @param array $variables
 *   An associative array
 */
function template_preprocess_kingdombride_bef_checkboxes(&$variables) {
    $variables['tags_attributes'] = new Attribute([
        'class' => ['kb-bef-checkboxes']
    ]);

    \Drupal::service('kingdombride_common.utils')->prepareBefTags($variables);
}

/**
 * Prepares variables for custom bef radios templates.
 *
 * Default template: kingdombride-bef-radios.html.twig.
 *
 * @param array $variables
 *   An associative array
 */
function template_preprocess_kingdombride_bef_radios(&$variables) {
    $variables['tags_attributes'] = new Attribute([
        'class' => ['kb-bef-radios']
    ]);

    //_kingdombride_common_bef_tags($variables);
}


/**
 * Prepares variables for views carousel rows templates.
 *
 * Default template: views-view-kingdombride-carousel.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - view: The view object.
 *   - rows: An array of row items. Each row is an array of content.
 */
function template_preprocess_views_view_kingdombride_carousel(&$variables) {
    $options = $variables['options'] = $variables['view']->style_plugin->options;

    /**
     * @var ViewExecutable $view
     */
    $view = $variables['view'];
    $rows = $variables['rows'];

    $carousel_view_id = str_replace('_', '-', 'carousel-' . $view->id() . '-' . $view->current_display);
    $main_attribute = [
        'id' => $carousel_view_id,
        'class' => ['carousel', 'slide', 'kingdombride-carousel'],
    ];

    if ($options['carousel_animate']) {
        $main_attribute['data-ride'] = 'carousel';
    }

    if ($options['carousel_wrap']) {
        $main_attribute['data-wrap'] = TRUE;
    }
    else {
        $main_attribute['data-wrap'] = FALSE;
    }

    if ($options['carousel_pause']) {
        $main_attribute['data-pause'] = 'hover';
    }
    else {
        $main_attribute['data-pause'] = 'null';
    }

    $main_attribute['data-interval'] = $options['carousel_interval'];

    $variables['carousel_view_id'] = $carousel_view_id;
    $variables['attributes'] = new Attribute($main_attribute);
    $variables['carousel_indicator'] = [
        '#type' => 'html_tag',
        '#tag' => 'ol',
        '#attributes' => [
            'class' => ['carousel-indicators'],
        ],
    ];

    foreach ($rows as $id => $row) {
        $variables['carousel_indicator'][$id] = [
            '#type' => 'html_tag',
            '#tag' => 'li',
            '#attributes' => [
                'data-target' => '#' . $carousel_view_id,
                'data-slide-to' => $id,
            ],
        ];

        if ($id === 0) {
            $variables['carousel_indicator'][$id]['#attributes']['class'] = ['active'];
            $variables['rows'][$id]['attributes']->addClass('active');
        }
    }
  }

/**
 * Implements hook_preprocess_field().
 */
function kingdombride_common_preprocess_field(&$variables) {
    if (!empty($variables['element']['#formatter'])) {
        $formatter_class = str_replace('_', '-', $variables['element']['#formatter']);
        $variables['attributes']['class'][] = $formatter_class;        
    }
}
